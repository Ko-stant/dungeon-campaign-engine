// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

// HeroTurnElectionPanel renders the turn election interface for hero players
func HeroTurnElectionPanel() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div id=\"hero-election-panel\" class=\"fixed top-20 left-1/2 transform -translate-x-1/2 z-40 hidden\"><div class=\"bg-surface border-2 border-amber-500 rounded-xl shadow-2xl p-6 w-96 backdrop-blur-sm bg-opacity-95\"><!-- Panel Header --><div class=\"text-center mb-4\"><h2 class=\"text-xl font-bold text-amber-400 mb-1\">Hero Phase</h2><p class=\"text-sm text-slate-300\" id=\"election-status-text\">Who will go next?</p></div><!-- Turn Cycle Info --><div class=\"bg-slate-900/50 rounded-lg p-3 mb-4 border border-border/40\"><div class=\"flex justify-between items-center text-sm\"><span class=\"text-slate-400\">Turn Cycle:</span> <span id=\"election-cycle-number\" class=\"text-amber-400 font-bold\">1</span></div><div class=\"flex justify-between items-center text-sm mt-2\"><span class=\"text-slate-400\">Heroes Remaining:</span> <span id=\"election-heroes-remaining\" class=\"text-slate-200 font-medium\">4</span></div></div><!-- Current Election State --><div id=\"election-current-state\" class=\"mb-4\"><!-- Elected Player Info (shown when someone is elected) --><div id=\"elected-player-info\" class=\"hidden bg-amber-900/30 border border-amber-500/50 rounded-lg p-3\"><div class=\"flex items-center gap-2 mb-2\"><div class=\"w-2 h-2 bg-amber-500 rounded-full animate-pulse\"></div><span class=\"text-xs font-semibold text-amber-400 uppercase\">Elected</span></div><p class=\"text-sm text-slate-200\"><span id=\"elected-player-name\" class=\"font-bold\"></span> will go next</p></div><!-- No Election State (shown when no one elected) --><div id=\"no-election-info\" class=\"bg-blue-900/20 border border-blue-500/30 rounded-lg p-3\"><p class=\"text-sm text-slate-300 text-center\">No hero has stepped forward yet</p></div></div><!-- Heroes Who Have Acted --><div id=\"heroes-acted-section\" class=\"mb-4 hidden\"><div class=\"text-xs font-semibold text-slate-400 mb-2 uppercase\">Already Acted This Cycle</div><div id=\"heroes-acted-list\" class=\"space-y-1\"><!-- Populated by JavaScript --></div></div><!-- Election Actions --><div id=\"election-actions\" class=\"space-y-2\"><!-- Elect Self Button --><button id=\"elect-self-btn\" class=\"w-full px-4 py-3 bg-amber-600 hover:bg-amber-700 text-white font-semibold rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center gap-2\"><svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 10V3L4 14h7v7l9-11h-7z\"></path></svg> <span>I'll Go Next!</span></button><!-- Cancel Election Button --><button id=\"cancel-election-btn\" class=\"w-full px-4 py-2 bg-slate-700 hover:bg-slate-600 text-white text-sm rounded-lg transition-colors hidden\">Cancel My Election</button></div><!-- Waiting for Election --><div id=\"waiting-for-election\" class=\"hidden text-center py-4\"><div class=\"flex items-center justify-center gap-2 text-slate-400\"><svg class=\"animate-spin h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\"><circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle> <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path></svg> <span class=\"text-sm\">Waiting for a hero to step forward...</span></div></div><!-- Helper Text --><div class=\"mt-4 pt-4 border-t border-border/40\"><p class=\"text-xs text-slate-400 text-center\">Heroes take turns in any order. Click \"I'll Go Next!\" when you're ready to act.</p></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// HeroTurnActivePanel renders the panel shown when it's the current player's turn
func HeroTurnActivePanel() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<div id=\"hero-active-panel\" class=\"fixed top-20 left-1/2 transform -translate-x-1/2 z-40 hidden\"><div class=\"bg-surface border-2 border-green-500 rounded-xl shadow-2xl p-6 w-96 backdrop-blur-sm bg-opacity-95\"><!-- Panel Header --><div class=\"text-center mb-4\"><div class=\"flex items-center justify-center gap-2 mb-2\"><div class=\"w-3 h-3 bg-green-500 rounded-full animate-pulse\"></div><h2 class=\"text-xl font-bold text-green-400\">Your Turn!</h2></div><p class=\"text-sm text-slate-300\">Take your actions, then complete your turn</p></div><!-- Turn Info --><div class=\"bg-slate-900/50 rounded-lg p-3 mb-4 border border-border/40\"><div class=\"flex justify-between items-center text-sm\"><span class=\"text-slate-400\">Character:</span> <span id=\"active-character-name\" class=\"text-green-400 font-bold\">Hero</span></div><div class=\"flex justify-between items-center text-sm mt-2\"><span class=\"text-slate-400\">Movement Remaining:</span> <span id=\"active-movement-remaining\" class=\"text-slate-200 font-medium\">0/0</span></div></div><!-- Available Actions --><div class=\"mb-4\"><div class=\"text-xs font-semibold text-slate-400 mb-2 uppercase\">Available Actions</div><div class=\"space-y-2 text-sm\"><div class=\"flex items-center gap-2 text-slate-300\"><span class=\"w-2 h-2 bg-blue-500 rounded-full\"></span> <span>Move up to <span id=\"max-movement\" class=\"font-semibold\">0</span> squares</span></div><div class=\"flex items-center gap-2 text-slate-300\"><span class=\"w-2 h-2 bg-red-500 rounded-full\"></span> <span>Attack adjacent enemies</span></div><div class=\"flex items-center gap-2 text-slate-300\"><span class=\"w-2 h-2 bg-purple-500 rounded-full\"></span> <span>Search for treasure/traps</span></div><div class=\"flex items-center gap-2 text-slate-300\"><span class=\"w-2 h-2 bg-amber-500 rounded-full\"></span> <span>Use items or abilities</span></div></div></div><!-- Complete Turn Button --><button id=\"complete-hero-turn-btn\" class=\"w-full px-4 py-3 bg-green-600 hover:bg-green-700 text-white font-semibold rounded-lg transition-colors flex items-center justify-center gap-2\"><svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path></svg> <span>Complete Turn</span></button><!-- Helper Text --><div class=\"mt-4 pt-4 border-t border-border/40\"><p class=\"text-xs text-slate-400 text-center\">Take all your actions, then click \"Complete Turn\" to end your turn.</p></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
