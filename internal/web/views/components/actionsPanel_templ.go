// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.960
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

// ActionsPanel displays tabs for Movement/Items/Actions
func ActionsPanel() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"p-4 space-y-3\"><!-- Tab Bar --><div class=\"grid grid-cols-3 gap-2 mb-3\"><button id=\"tabMovement\" class=\"px-3 py-2 text-sm font-medium rounded bg-blue-600/20 border border-blue-600/40 text-blue-300 hover:bg-blue-600/30 cursor-pointer\">Movement</button> <button id=\"tabItems\" class=\"px-3 py-2 text-sm font-medium rounded bg-surface border border-border/60 hover:bg-surface-2 cursor-pointer\">Items</button> <button id=\"tabActions\" class=\"px-3 py-2 text-sm font-medium rounded bg-surface border border-border/60 hover:bg-surface-2 cursor-pointer\">Actions</button></div><!-- Tab Content --><div id=\"tabContent\"><!-- Movement Tab (default active) -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = MovementTab().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<!-- Items Tab (hidden by default) --><div id=\"itemsTabContent\" class=\"hidden\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = ItemsTab().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</div><!-- Actions Tab (hidden by default) --><div id=\"actionsTabContent\" class=\"hidden\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = ActionsTab().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</div></div><!-- Always Visible: Pass Turn --><button id=\"passTurn\" class=\"w-full px-3 py-2 text-sm bg-orange-600/20 border border-orange-600/40 rounded hover:bg-orange-600/30 text-orange-300 cursor-pointer\">‚è≠Ô∏è Pass Turn</button></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// MovementTab shows movement controls
func MovementTab() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "<div id=\"movementTabContent\" class=\"space-y-3\"><!-- Roll Movement Button --><button id=\"rollMovement\" class=\"w-full px-3 py-2 text-sm bg-blue-600/20 border border-blue-600/40 rounded hover:bg-blue-600/30 text-blue-300 cursor-pointer\">üé≤ Roll Movement (2d6)</button><!-- Movement Planning Controls (compact) --><div id=\"movementPlanningControls\" class=\"p-3 bg-blue-900/20 rounded-md border border-blue-600/40\" style=\"display: none;\"><div class=\"flex items-center justify-between mb-2\"><h3 class=\"text-sm font-semibold text-blue-300\">üö∂ Movement</h3><div id=\"diceResultsDisplay\" class=\"text-xs font-mono text-blue-200\"></div></div><div id=\"movementStatus\" class=\"text-xs mb-2 text-blue-200\"></div><!-- Compact icon buttons in a row --><div class=\"flex gap-1\"><button id=\"resetMovement\" title=\"Reset Path\" class=\"flex-1 px-2 py-1.5 text-sm bg-yellow-600/20 border border-yellow-600/40 rounded hover:bg-yellow-600/30 text-yellow-300 cursor-pointer\">‚Ü∂</button> <button id=\"executeMovement\" title=\"Execute Movement\" class=\"flex-1 px-2 py-1.5 text-sm bg-green-600/20 border border-green-600/40 rounded hover:bg-green-600/30 text-green-300 cursor-pointer\" disabled>‚úì</button> <button id=\"cancelMovement\" title=\"Cancel Planning\" class=\"flex-1 px-2 py-1.5 text-sm bg-red-600/20 border border-red-600/40 rounded hover:bg-red-600/30 text-red-300 cursor-pointer\">‚úó</button></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// ItemsTab shows usable items
func ItemsTab() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "<div class=\"space-y-3\"><h3 class=\"text-sm font-semibold opacity-80\">Usable Items</h3><div id=\"itemsGrid\" class=\"grid grid-cols-2 gap-2\"><!-- Will be populated by JS --><div class=\"text-xs opacity-70 text-center col-span-2 py-4\">No items available</div></div><button id=\"useItem\" class=\"w-full px-3 py-2 text-sm bg-green-600/20 border border-green-600/40 rounded hover:bg-green-600/30 text-green-300 cursor-pointer\" disabled>Use Selected Item</button></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// ActionsTab shows available actions
func ActionsTab() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var4 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var4 == nil {
			templ_7745c5c3_Var4 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "<div class=\"space-y-2\"><h3 class=\"text-sm font-semibold opacity-80 mb-2\">Available Actions</h3><button id=\"actionAttack\" class=\"w-full px-3 py-2 text-sm bg-surface border border-border/60 rounded hover:bg-surface-2 text-left cursor-pointer\">‚öîÔ∏è Attack</button> <button id=\"actionSpell\" class=\"w-full px-3 py-2 text-sm bg-surface border border-border/60 rounded hover:bg-surface-2 text-left cursor-pointer\">‚ú® Cast Spell</button> <button id=\"actionSearchTreasure\" class=\"w-full px-3 py-2 text-sm bg-surface border border-border/60 rounded hover:bg-surface-2 text-left cursor-pointer\">üí∞ Search for Treasure</button> <button id=\"actionSearchTraps\" class=\"w-full px-3 py-2 text-sm bg-surface border border-border/60 rounded hover:bg-surface-2 text-left cursor-pointer\">üîç Search for Traps</button> <button id=\"actionSearchSecret\" class=\"w-full px-3 py-2 text-sm bg-surface border border-border/60 rounded hover:bg-surface-2 text-left cursor-pointer\">üö™ Search for Secret Doors</button> <button id=\"actionWait\" class=\"w-full px-3 py-2 text-sm bg-surface border border-border/60 rounded hover:bg-surface-2 text-left cursor-pointer\">‚è∏Ô∏è Wait</button></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
