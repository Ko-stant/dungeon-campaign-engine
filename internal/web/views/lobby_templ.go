// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.960
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"github.com/Ko-stant/dungeon-campaign-engine/internal/web/views/components"
)

// LobbyPage renders the pre-game lobby where players join and select roles
func LobbyPage(availableHeroes []string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"flex flex-col items-center justify-center min-h-screen bg-gradient-to-br from-slate-900 to-slate-800 p-8\"><div class=\"w-full max-w-4xl\"><!-- Lobby Header --><div class=\"text-center mb-8\"><h1 class=\"text-5xl font-bold text-amber-400 mb-2\">HeroQuest</h1><p class=\"text-xl text-slate-300\">Multiplayer Lobby</p></div><!-- Main Lobby Container --><div class=\"bg-slate-800/80 backdrop-blur-sm rounded-lg shadow-2xl border border-slate-700 p-8\"><!-- Join Form (shown when not yet joined) --><div id=\"join-form\" class=\"space-y-6\"><div><label for=\"player-name\" class=\"block text-sm font-medium text-slate-300 mb-2\">Enter Your Name</label> <input type=\"text\" id=\"player-name\" placeholder=\"Your name\" class=\"w-full px-4 py-3 bg-slate-700 border border-slate-600 rounded-lg text-white placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-amber-500 focus:border-transparent\"></div><button id=\"join-button\" class=\"w-full px-6 py-3 bg-amber-600 hover:bg-amber-700 text-white font-semibold rounded-lg transition-colors shadow-lg hover:shadow-xl\">Join Lobby</button></div><!-- Role Selection (shown after joining) --><div id=\"role-selection\" class=\"hidden space-y-6\"><div><h2 class=\"text-2xl font-bold text-amber-400 mb-4\">Select Your Role</h2><!-- Game Master Option --><div class=\"space-y-3 mb-6\"><button id=\"select-gm\" class=\"w-full px-6 py-4 bg-purple-900/50 hover:bg-purple-800/60 border-2 border-purple-700 rounded-lg text-left transition-all\"><div class=\"flex items-center justify-between\"><div><div class=\"text-xl font-semibold text-purple-300\">Game Master</div><div class=\"text-sm text-slate-400\">Control the dungeon and monsters</div></div><div class=\"text-3xl\">ðŸŽ²</div></div></button></div><!-- Hero Options --><div class=\"space-y-3\"><h3 class=\"text-lg font-semibold text-slate-300 mb-2\">Heroes</h3><div class=\"grid grid-cols-2 gap-3\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			for _, heroID := range availableHeroes {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<button class=\"hero-select-btn px-4 py-3 bg-blue-900/50 hover:bg-blue-800/60 border-2 border-blue-700 rounded-lg transition-all\" data-hero-id=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var3 string
				templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(heroID)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `lobby.templ`, Line: 69, Col: 32}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "\"><div class=\"text-lg font-semibold text-blue-300 capitalize\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var4 string
				templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(heroID)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `lobby.templ`, Line: 71, Col: 79}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</div></button>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "</div></div></div><!-- Ready Toggle --><div class=\"flex items-center justify-between pt-6 border-t border-slate-700\"><div><div class=\"text-lg font-semibold text-slate-300\">Ready to start?</div><div class=\"text-sm text-slate-400\">Wait for all players to ready up</div></div><button id=\"toggle-ready\" class=\"px-6 py-3 bg-green-900/50 hover:bg-green-800/60 border-2 border-green-700 rounded-lg font-semibold text-green-300 transition-all disabled:opacity-50 disabled:cursor-not-allowed\" disabled>Ready</button></div><!-- Start Game Button (GM only) --><div id=\"start-game-container\" class=\"hidden pt-4\"><button id=\"start-game\" class=\"w-full px-6 py-4 bg-amber-600 hover:bg-amber-700 text-white font-bold text-lg rounded-lg transition-colors shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed\" disabled>Start Game</button></div></div><!-- Player List --><div id=\"player-list-container\" class=\"hidden mt-8 pt-8 border-t border-slate-700\"><h3 class=\"text-xl font-bold text-slate-300 mb-4\">Players in Lobby</h3><div id=\"player-list\" class=\"space-y-2\"><!-- Players will be populated here by JavaScript --></div></div><!-- Connection Status --><div id=\"connection-status\" class=\"mt-6 text-center text-sm text-slate-400\">Connecting to server...</div></div></div></div><!-- Lobby JavaScript --> <script>\n\t\t\t(function() {\n\t\t\t\tlet ws = null;\n\t\t\t\tlet myPlayerID = null;\n\t\t\t\tlet currentLobbyState = null;\n\n\t\t\t\t// DOM elements\n\t\t\t\tconst joinForm = document.getElementById('join-form');\n\t\t\t\tconst roleSelection = document.getElementById('role-selection');\n\t\t\t\tconst playerListContainer = document.getElementById('player-list-container');\n\t\t\t\tconst playerList = document.getElementById('player-list');\n\t\t\t\tconst connectionStatus = document.getElementById('connection-status');\n\t\t\t\tconst joinButton = document.getElementById('join-button');\n\t\t\t\tconst playerNameInput = document.getElementById('player-name');\n\t\t\t\tconst selectGMButton = document.getElementById('select-gm');\n\t\t\t\tconst toggleReadyButton = document.getElementById('toggle-ready');\n\t\t\t\tconst startGameContainer = document.getElementById('start-game-container');\n\t\t\t\tconst startGameButton = document.getElementById('start-game');\n\n\t\t\t\t// Connect to WebSocket\n\t\t\t\tfunction connect() {\n\t\t\t\t\tconst protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n\t\t\t\t\tconst wsURL = `${protocol}//${window.location.host}/stream`;\n\n\t\t\t\t\tconnectionStatus.textContent = 'Connecting to server...';\n\t\t\t\t\tconnectionStatus.className = 'mt-6 text-center text-sm text-slate-400';\n\n\t\t\t\t\tws = new WebSocket(wsURL);\n\n\t\t\t\t\tws.onopen = () => {\n\t\t\t\t\t\tconsole.log('WebSocket connected');\n\t\t\t\t\t\tconnectionStatus.textContent = 'Connected';\n\t\t\t\t\t\tconnectionStatus.className = 'mt-6 text-center text-sm text-green-400';\n\t\t\t\t\t};\n\n\t\t\t\t\tws.onmessage = (event) => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst envelope = JSON.parse(event.data);\n\t\t\t\t\t\t\thandleServerMessage(envelope);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tconsole.error('Failed to parse message:', err);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tws.onerror = (error) => {\n\t\t\t\t\t\tconsole.error('WebSocket error:', error);\n\t\t\t\t\t\tconnectionStatus.textContent = 'Connection error';\n\t\t\t\t\t\tconnectionStatus.className = 'mt-6 text-center text-sm text-red-400';\n\t\t\t\t\t};\n\n\t\t\t\t\tws.onclose = () => {\n\t\t\t\t\t\tconsole.log('WebSocket disconnected');\n\t\t\t\t\t\tconnectionStatus.textContent = 'Disconnected - Reconnecting...';\n\t\t\t\t\t\tconnectionStatus.className = 'mt-6 text-center text-sm text-yellow-400';\n\t\t\t\t\t\tsetTimeout(connect, 2000);\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Handle messages from server\n\t\t\t\tfunction handleServerMessage(envelope) {\n\t\t\t\t\tconsole.log('Server message:', envelope);\n\n\t\t\t\t\tswitch (envelope.type) {\n\t\t\t\t\t\tcase 'PlayerIDAssigned':\n\t\t\t\t\t\t\tmyPlayerID = envelope.payload.playerId;\n\t\t\t\t\t\t\tconsole.log('Received player ID:', myPlayerID);\n\t\t\t\t\t\t\t// Set cookie for page routing\n\t\t\t\t\t\t\tdocument.cookie = `playerID=${myPlayerID}; path=/; max-age=86400; samesite=strict`;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'LobbyStateChanged':\n\t\t\t\t\t\t\thandleLobbyState(envelope.payload);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'GameStarting':\n\t\t\t\t\t\t\thandleGameStarting(envelope.payload);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.log('Unknown message type:', envelope.type);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Handle lobby state updates\n\t\t\t\tfunction handleLobbyState(state) {\n\t\t\t\t\tcurrentLobbyState = state;\n\t\t\t\t\tupdatePlayerList(state.players);\n\t\t\t\t\tupdateReadyButton(state);\n\t\t\t\t\tupdateStartGameButton(state);\n\t\t\t\t}\n\n\t\t\t\t// Update player list display\n\t\t\t\tfunction updatePlayerList(players) {\n\t\t\t\t\tif (!players || Object.keys(players).length === 0) {\n\t\t\t\t\t\tplayerListContainer.classList.add('hidden');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tplayerListContainer.classList.remove('hidden');\n\t\t\t\t\tplayerList.innerHTML = '';\n\n\t\t\t\t\tObject.values(players).forEach(player => {\n\t\t\t\t\t\tconst playerDiv = document.createElement('div');\n\t\t\t\t\t\tplayerDiv.className = 'flex items-center justify-between p-3 bg-slate-700/50 rounded-lg';\n\n\t\t\t\t\t\tlet roleDisplay = '';\n\t\t\t\t\t\tlet roleColor = 'text-slate-400';\n\t\t\t\t\t\tif (player.role === 'gamemaster') {\n\t\t\t\t\t\t\troleDisplay = 'Game Master';\n\t\t\t\t\t\t\troleColor = 'text-purple-300';\n\t\t\t\t\t\t} else if (player.role === 'hero') {\n\t\t\t\t\t\t\troleDisplay = player.heroClassId || 'Hero';\n\t\t\t\t\t\t\troleColor = 'text-blue-300';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst readyIndicator = player.isReady ?\n\t\t\t\t\t\t\t'<span class=\"text-green-400\">âœ“ Ready</span>' :\n\t\t\t\t\t\t\t'<span class=\"text-slate-500\">Not ready</span>';\n\n\t\t\t\t\t\tplayerDiv.innerHTML = `\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<div class=\"font-semibold text-slate-200\">${player.name}</div>\n\t\t\t\t\t\t\t\t<div class=\"text-sm ${roleColor}\">${roleDisplay || 'No role selected'}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"text-sm\">${readyIndicator}</div>\n\t\t\t\t\t\t`;\n\n\t\t\t\t\t\tplayerList.appendChild(playerDiv);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Update ready button state\n\t\t\t\tfunction updateReadyButton(state) {\n\t\t\t\t\tif (!state.players || !myPlayerID) {\n\t\t\t\t\t\tconsole.log('Cannot update ready button - missing state or playerID', {players: state.players, myPlayerID});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst myPlayer = Object.values(state.players).find(p => p.id === myPlayerID);\n\t\t\t\t\tif (!myPlayer) {\n\t\t\t\t\t\tconsole.log('Cannot find my player in state', {myPlayerID, players: state.players});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconsole.log('My player state:', myPlayer);\n\t\t\t\t\ttoggleReadyButton.disabled = !myPlayer.role;\n\n\t\t\t\t\tif (myPlayer.isReady) {\n\t\t\t\t\t\ttoggleReadyButton.textContent = 'Not Ready';\n\t\t\t\t\t\ttoggleReadyButton.className = 'px-6 py-3 bg-red-900/50 hover:bg-red-800/60 border-2 border-red-700 rounded-lg font-semibold text-red-300 transition-all';\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttoggleReadyButton.textContent = 'Ready';\n\t\t\t\t\t\ttoggleReadyButton.className = 'px-6 py-3 bg-green-900/50 hover:bg-green-800/60 border-2 border-green-700 rounded-lg font-semibold text-green-300 transition-all';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!myPlayer.role) {\n\t\t\t\t\t\ttoggleReadyButton.className += ' opacity-50 cursor-not-allowed';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Update start game button (GM only)\n\t\t\t\tfunction updateStartGameButton(state) {\n\t\t\t\t\tif (!state.players || !myPlayerID) return;\n\n\t\t\t\t\tconst myPlayer = Object.values(state.players).find(p => p.id === myPlayerID);\n\t\t\t\t\tif (!myPlayer || myPlayer.role !== 'gamemaster') {\n\t\t\t\t\t\tstartGameContainer.classList.add('hidden');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tstartGameContainer.classList.remove('hidden');\n\t\t\t\t\tstartGameButton.disabled = !state.canStartGame;\n\n\t\t\t\t\tif (state.canStartGame) {\n\t\t\t\t\t\tstartGameButton.className = 'w-full px-6 py-4 bg-amber-600 hover:bg-amber-700 text-white font-bold text-lg rounded-lg transition-colors shadow-lg hover:shadow-xl';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstartGameButton.className = 'w-full px-6 py-4 bg-amber-600 text-white font-bold text-lg rounded-lg opacity-50 cursor-not-allowed';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Handle game starting\n\t\t\t\tfunction handleGameStarting(payload) {\n\t\t\t\t\tconnectionStatus.textContent = payload.message;\n\t\t\t\t\tconnectionStatus.className = 'mt-6 text-center text-lg text-amber-400 font-semibold';\n\n\t\t\t\t\t// Redirect to game after short delay\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\twindow.location.href = '/';\n\t\t\t\t\t}, 2000);\n\t\t\t\t}\n\n\t\t\t\t// Send message to server\n\t\t\t\tfunction sendMessage(type, payload) {\n\t\t\t\t\tif (!ws || ws.readyState !== WebSocket.OPEN) {\n\t\t\t\t\t\tconsole.error('WebSocket not connected');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst envelope = {\n\t\t\t\t\t\ttype: type,\n\t\t\t\t\t\tpayload: payload\n\t\t\t\t\t};\n\n\t\t\t\t\tws.send(JSON.stringify(envelope));\n\t\t\t\t}\n\n\t\t\t\t// Join lobby\n\t\t\t\tjoinButton.addEventListener('click', () => {\n\t\t\t\t\tconst playerName = playerNameInput.value.trim();\n\t\t\t\t\tif (!playerName) {\n\t\t\t\t\t\talert('Please enter your name');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tsendMessage('RequestJoinLobby', { playerName: playerName });\n\n\t\t\t\t\t// Show role selection\n\t\t\t\t\tjoinForm.classList.add('hidden');\n\t\t\t\t\troleSelection.classList.remove('hidden');\n\t\t\t\t});\n\n\t\t\t\t// Select Game Master role\n\t\t\t\tselectGMButton.addEventListener('click', () => {\n\t\t\t\t\tsendMessage('RequestSelectRole', { role: 'gamemaster', heroClassId: '' });\n\t\t\t\t});\n\n\t\t\t\t// Select Hero role\n\t\t\t\tdocument.querySelectorAll('.hero-select-btn').forEach(btn => {\n\t\t\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\t\t\tconst heroID = btn.dataset.heroId;\n\t\t\t\t\t\tsendMessage('RequestSelectRole', { role: 'hero', heroClassId: heroID });\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t// Toggle ready status\n\t\t\t\ttoggleReadyButton.addEventListener('click', () => {\n\t\t\t\t\tif (!currentLobbyState || !myPlayerID) return;\n\n\t\t\t\t\tconst myPlayer = Object.values(currentLobbyState.players).find(p => p.id === myPlayerID);\n\t\t\t\t\tif (!myPlayer) return;\n\n\t\t\t\t\tsendMessage('RequestToggleReady', { isReady: !myPlayer.isReady });\n\t\t\t\t});\n\n\t\t\t\t// Start game (GM only)\n\t\t\t\tstartGameButton.addEventListener('click', () => {\n\t\t\t\t\tif (confirm('Start the game? All players must be ready.')) {\n\t\t\t\t\t\tsendMessage('RequestStartGame', {});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Allow Enter key to join\n\t\t\t\tplayerNameInput.addEventListener('keypress', (e) => {\n\t\t\t\t\tif (e.key === 'Enter') {\n\t\t\t\t\t\tjoinButton.click();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Initialize\n\t\t\t\tconnect();\n\t\t\t})();\n\t\t</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = components.AppShell().Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
